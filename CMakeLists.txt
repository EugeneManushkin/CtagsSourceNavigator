cmake_minimum_required(VERSION 3.0)

if(NOT DEFINED CTAGS_VERSION_MAJOR OR NOT DEFINED CTAGS_VERSION_MINOR OR NOT DEFINED CTAGS_BUILD)
    set(CTAGS_VERSION_MAJOR 0)
    set(CTAGS_VERSION_MINOR 0)
    set(CTAGS_BUILD 0)
endif(NOT DEFINED CTAGS_VERSION_MAJOR OR NOT DEFINED CTAGS_VERSION_MINOR OR NOT DEFINED CTAGS_BUILD)

include_directories(Far)
file(GLOB SOURCES
    "src/*.h"
    "src/*.cpp"
    "src/exported_calls.def"
)

if (MSVC)
    set(SOURCES ${SOURCES} "src/resource.rc")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MT")
    set(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MT")
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
endif(MSVC)

add_library(ctags SHARED ${SOURCES})
set(PLUGIN_DIR ${CMAKE_BINARY_DIR}/$<CONFIG>/ctags)
target_compile_definitions(ctags PUBLIC CTAGS_VERSION_MAJOR=${CTAGS_VERSION_MAJOR}
                                 PUBLIC CTAGS_VERSION_MINOR=${CTAGS_VERSION_MINOR}
                                 PUBLIC CTAGS_BUILD=${CTAGS_BUILD}
)

add_custom_command(TARGET ctags POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/src/tagseng.lng ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:ctags> ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/COPYING ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/README.md ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/README-rus.md ${PLUGIN_DIR}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/hotkeys/ctags_hotkeys.lua ${PLUGIN_DIR}
)

add_subdirectory(tests)
